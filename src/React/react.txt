1. What is React and what are some of its features?
2. What is JSX and how is it different from HTML?
3. What are components and how do you create them in React?
4. What are props and state and how do you use them in React?
5. What is the virtual DOM and how does React use it to render the UI?
6. What are the differences between functional and class components?
7. What are hooks and how do you use them in React?
8. How do you handle events and forms in React?
9. How do you use lifecycle methods or useEffect hook in React?
10. How do you use routing in React?


1. React — JavaScript-библиотека для работы с пользовательскими интерфейсами (UI), которую создали разработчики Facebook. С помощью React разработчики создают веб-приложения, которые изменяют отображение без перезагрузки страницы. Поэтому  приложения быстро реагируют на действия пользователя, например на заполнение формы,  добавление товаров в корзину и тд.

2. Jsx- это расширение языка JavaScript, которое помогает описывать HTML элементы с помощью кода на React. С помощью синтаксиса на React создают компоненты страницы и гибко управляют ими.

3. Компоненты — это независимые функциональные элементы, которые можно многократно использовать в приложениях. Все приложения React строятся на компонентах. Чтобы создать функц компонент, нужно создать обычную функцию с возвращающим jsx кодом.

4. props и state — это обычные JavaScript-объекты. Несмотря на то, что оба содержат информацию, которая влияет на то, что увидим после рендера, есть  различие: props передаётся в компонент (служат как параметры функции), в то время как state находится внутри компонента. Оба объекта используются для описания состояния компонента.

5. VDOM — это объектное представление RDOM, его  копия. VDOM содержит те же свойства, что и RDOM, но не может напрямую влиять на то, что отображается на экране. Такой подход и делает API React декларативным: вы указываете, в каком состоянии должен находиться пользовательский интерфейс, а React добивается, чтобы DOM соответствовал этому состоянию. Это отбрасывает работу с атрибутами, обработку событий и т.д

6. Главное отличие классового компонента от функционального это возможность хранить внутреннее состояния. Классовый компонент должен содержать метод render(), который возвращает React-элемент. Доступ к props осуществляется через this.props. Обновление компонента происходит при изменении пропсов или состояния. Функциональные компоненты легче по структуре кода, и в них можно использовать хуки) которые нельзя юзать в классовых компонентах.

7. Хуки — это технология, которая перехватывает вызовы функций и помогает использовать возможности React без написания классов. Хуки — это функции, имена которых принято начинать с use. Так их легко отличить от любых других функций. В React встроено около 10 хуков

8. В React события обрабатываются с помощью функций-обработчиков, которые передаются в качестве свойств компонентов.  Чтобы обработать клик на кнопке, нужно передать функцию обработчик в свойство onClick, чтобы отследить какое-либо изменение, нужно передать onChange

9. componentDidMount - этот метод вызывается после того, как компонент был отрисован в DOM.
componentDidUpdate - этот метод вызывается после каждого обновления компонента
componentWillUnmount - этот метод вызывается перед удалением компонента из DOM
Хук useEffect - это более новый способ использования методов жизненного цикла в функциональных компонентах. useEffect  вызывается после каждого рендеринга функционального компонента. отписываться от какого либо ресурса в useEffect можно при помощи функции return, которую нужно вызывать после основного кода.

10. Routing в React можно использовать с помощью библиотеки React Router.
Обернуть все приложегние в BrowserRouter, затем можно создать компонент-контейнер, который будет рендерить различные компоненты в зависимости от пути (route)